services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: ${DOCKER_TARGET:-prod}
    container_name: app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
      - ./var/log:/var/log
      - ./var/log/xdebug:/var/log/xdebug
    networks:
      - ledger-network
    depends_on:
      db:
        condition: service_healthy

  nginx:
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
      DOCKER_ENABLE_IPV6: "false"
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-prod}
    container_name: nginx
    command: >
      /bin/sh -c "chown nginx:nginx /var/log/nginx && nginx -g 'daemon off;'"
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/app:ro
    networks:
      - ledger-network
    depends_on:
      - app

  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - ledger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  ledger-network:
    driver: bridge

volumes:
  dbdata:
