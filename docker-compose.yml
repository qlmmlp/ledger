services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: ${DOCKER_TARGET:-prod}
    container_name: ledger-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - ledger-network

  nginx:
    image: nginx:alpine
    container_name: ledger-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - ledger-network

  db:
    image: postgres:15-alpine
    container_name: ledger-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - ledger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ledger-network:
    driver: bridge

volumes:
  dbdata:
